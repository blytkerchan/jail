# Three different line formats are valid:
#	key	-a    aliases...
#	key [options] directory
#	key [options] directory files...
#
# Where "options" are composed of:
#	-i prog		Run "prog" on "cvs commit" from top-level of module.
#	-o prog		Run "prog" on "cvs checkout" of module.
#	-e prog		Run "prog" on "cvs export" of module.
#	-t prog		Run "prog" on "cvs rtag" of module.
#	-u prog		Run "prog" on "cvs update" of module.
#	-d dir		Place module in directory "dir" instead of module name.
#	-l		Top-level directory only -- do not recurse.
#
# NOTE:  If you change any of the "Run" options above, you'll have to
# release and re-checkout any working directories of these modules.
#
# And "directory" is a path to a directory relative to $CVSROOT.
#
# The "-a" option specifies an alias.  An alias is interpreted as if
# everything on the right of the "-a" had been typed on the command line.
#
# You can encode a module within a module by using the special '&'
# character to interpose another module into the current module.  This
# can be useful for creating a module that consists of many directories
# spread out over the entire source repository.
libcontain-arch -d libcontain/arch arch
libcontain-libreplace -d libcontain/libreplace libreplace
release-libcontain -a libcontain libcontain-arch libcontain-libreplace

libmemory-arch -d libmemory/arch arch
release-libmemory -a libmemory libmemory-arch

preprocessor-arch -d preprocessor/arch arch
preprocessor-libcontain -d preprocessor/libcontain libcontain
preprocessor-libreplace -d preprocessor/libreplace libreplace
preprocessor-libcontain-libreplace -d preprocessor/libcontain/libreplace libreplace
preprocessor-libcontain-arch -d preprocessor/libcontain/arch arch
preprocessor-libconf -d preprocessor/libconf libconf
preprocessor-libconf-libreplace -d preprocessor/libconf/libreplace libreplace
release-preprocessor -a preprocessor preprocessor-arch preprocessor-libcontain preprocessor-libreplace preprocessor-libcontain-libreplace preprocessor-libcontain-arch preprocessor-libconf


