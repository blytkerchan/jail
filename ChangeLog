2004-08-15	blytkerchan	start translating how_rwlocks_work into C
	* rw_lock.c: new file
	* rw_lock.h: ditto

2004-08-11	blytkerchan
	* rw_spinlock.h [rw_spinlock_t]: remove excl and shar fields

	* barrier.h: use uint32_t in stead of unsigned int throughout
	* barrier.c: ditto
	(barrier_wait): use compare_and_exchange_int in stead of obsolete
	compare_and_exchange
	* critical_section.c (critical_section_enter): use 
	compare_and_exchange_ptr in stead of obsolete compare_and_exchange
	(critical_section_leave): ditto
	* semaphore.c (lt_sem_wait): use compare_and_exchange_int in stead of
	obsolete compare_and_exchange
	(lt_sem_enq): use compare_and_exchange_ptr in stead of obsolete
	compare_and_exchange

2004-08-10	blytkerchan	compile with gcc-2.95.4
	* rw_spinlock.c: move includes up
	include stdlib.h for calloc
	* rw_spinlock.h: include stdint.h

	* rw_spinlock.h (rw_spinlock_upgrade): new function
	* rw_spinlock.c: ditto

2004-08-03	blytkerchan
	* module.mk: add rw_spinlock.c to sources

	* rw_spinlock.c: new file
	* rw_spinlock.h: ditto

2004-07-27	blytkerchan
	* barrier.c (barrier_wait): replace thread_interrupt with lt_thread_interrupt

	* how_semaphores_work: update
	* semaphore.c (lt_sem_new): rename from lt_sem_create
	include thread.h
	(lt_sem_release): invert arguments to lt_thread_kill
	* semaphore.h [lt_sem_t]: let queue and tail be void*
	(lt_sem_new): rename from lt_sem_create
	* thread.c: include pthread.h
	include semaphore.h
	re-order includes
	[key]: new statis global
	(lt_thread_create_helper): store handle in a thread-local variable
	(lt_thread_init): new function
	(lt_thread_term): ditto
	(lt_thread_new): rename from lt_thread_create
	re-factor
	(lt_thread_self): new function
	(lt_thread_eq): ditto
	(lt_thread_kill): ditto
	* thread.h: include *local* semaphore.h
	remove duplicate definition of lt_thread_self
	[lt_thread_t]: let priv_sem member be an lt_sem_t*
	(lt_thread_new): rename from lt_thread_create and return the handle
	(lt_thread_kill): swap parameters

	* how_rw_locks_work.txt: update

2004-07-26	blytkerchan
	* how_rw_locks_work.txt: new file

	* how_semaphores_work.txt: update

	* semaphore.c: fix spelling errors and type-os
	prefix all calls to libthread functions with lt_
	fix all compiler warnings and errors
	* semaphore.h: include stdint.h
	* thread.h (lt_thread_self): new function (decl only)
	(lt_thread_kill): ditto
	(lt_thread_interrupt): rename from thread_interrupt

2004-07-23	blytkerchan
	* semaphore.c (lt_sem_wait): change logic to FIFO

	* module.mk: don't compile semaphores if we don't have pthread_sigmask
	* barrier.c (barrier_wait): cast atomic_increment parameter to uint32_t*
	* semaphore.c: include necessary headers
	s/thread_t/lt_thread_t/g
	(lt_sem_init): cast second arg of atomic_set to void*
	(lt_sem_wait): repair calls to sigemptyset, sigaddset and
	pthread_sigmask
	* semaphore.h: include thread.h
	[lt_sem_t]: add tail member
	s/thread_t/lt_thread_t/g

	* semaphore.c (lt_sem_create): take new member tail into account
	(lt_sem_enq): implement
	(lt_sem_deq): re-implement and assume only one caller at a time
	* semaphore.h [lt_sem_t]: add member tail
	* module.mk: remove erroneous backslash

2004-07-22	blytkerchan
	* how_semaphores_work: undefine behaviour of lt_sem_init if semaphore is in use
	* semaphore.c (lt_sem_first): new function
	(lt_sem_enq): ditto (empty for the moment)
	(lt_sem_deq): ditto
	(lt_sem_init): implement
	(lt_sem_create): ditto
	(lt_sem_free): ditto
	(lt_sem_wait): ditto
	(lt_sem_release): ditto
	* semaphore.h: change prototype of lt_sem_init

	* version: new file

	* semaphore.c: new file
	* semaphore.h: ditto
	* module.mk: ditto

2004-07-19	blytkerchan
	* how_semaphores_work.txt: new file

2004-07-17	blytkerchan
	* ChangeLog: new file
	* Makefile: ditto
	* barrier.c: ditto
	* barrier.h: ditto
	* critical_section.c: ditto
	* critical_section.h: ditto
	* how_critical_sections_work.txt: ditto
	* thread.c: ditto
	* thread.h: ditto

