2005-10-18	blytkerchan
bugfix: storing nodes in the dag's vector and taking a pointer to such a node
invalidated the pointer when sorting
	* dag.hpp: reflect above throughout the rlc::dag class
	[dag::nodes_type]: new typedef
	(~dag): new destructor
	(insert): allocate the new node dynamically
	(erase): delete previously allocated node

2005-07-14	blytkerchan
	* circular_reference_exception.hpp: new file
	* dag_iterator.hpp: ditto
	* dag_node.hpp: ditto
	* scoped_flag.hpp: ditto
	* visitors.hpp: ditto

2005-07-15	blytkerchan
	* Makefile [install]: add target

	* Makefile: rewrite
	* dag.hpp: new file
	* depends.hpp: ditto
	* readme.txt: ditto
	* test.cc: ditto
	* dag.c: remove
	* dag.h: ditto
	* depends.c: ditto
	* depends.h: ditto
	* edge.c: ditto
	* edge.h: ditto
	* node.c: ditto
	* node.h: ditto
	* vector.c: ditto
	* vector.h: ditto

2005-05-31	blytkerchan
	* dag.c (dag_node_new): initialize flags field
	(dag_node_free): unlink from neighbours before destroying the node
	(dag_node_unlink): implement
	(dag_node_visit): ditto

2005-05-23	blytkerchan	re-starting implementation
	* dag.c: new file
	* dag.h: ditto

2005-04-28	blytkerchan
	* depends.c: unfinished debug session
	* edge.h: ditto
	* node.c: ditto
	* node.h: ditto
	* vector.c: ditto
	* vector.h: ditto

	* depends.c: split up into many files
	prepare to change the logic of associating vectors with the DAG:
	associate them with nodes in stead of edges (to prevent unresolvable
	dependencies)
	* depends.h: reflect above
	* vector.c: new file
	* vector.h: ditto
	* node.c: ditto
	* node.h: ditto
	* edge.c: ditto
	* edge.h: ditto

2005-04-23	blytkerchan
	* depends.c: include assert.h
	[DEPENDS_VECTOR_FLAG_INVALID]: rename from DEPENDS_VECTOR_INVALID
	[DEPENDS_VECTOR_FLAG_DONE]: new macro
	[struct depends_vector_type]: rename flags member from flag
	[struct depends_type]: new members edges and vectors
	(dep_new): reflect above
	[depends_node_visitor_func]: change prototype to take user data
	(depends_node_visit): reflect above
	(depends_node_visit_helper): ditto
	(depends_edge_insert): ditto
	(depends_edge_new): take the handle to the tracker as param
	add the new edge to the edges member of the tracker
	(dep_depends): reflect above signature change
	reflect change to member name in struct depends_vector_type
	(dep_blocks): ditto (all)
	(depends_edge_free): free the list of vectors
	[struct dep_depends_on_helper_data_type]: new type
	(dep_depends_on_helper_helper): new function
	(dep_depends_on_helper): ditto
	(dep_depends_on): implement
	(dep_blocking_on_helper): new function
	(dep_blocking): implement
	[struct dep_resolve_edge_visitor_data_type]: new type
	(dep_resolve_retrieve_satisfiable_edge_helper): new function
	(dep_resolve): start implementation
	
2005-04-21	blytkerchan
	* Makefile: new file
	* depends.c: continue implementation
	
2005-04-16	blytkerchan
	* depends.c: new file
	* depends.h (dep_depends): add data parameter
	(dep_blocks): ditto

	* depends.h: new file
